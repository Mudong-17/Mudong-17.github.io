import{_ as e,c as i,o,k as d}from"./chunks/framework.B1TVv_7S.js";const m=JSON.parse('{"title":"编辑器 开发 Flutter 实用技巧","description":null,"frontmatter":{"title":"编辑器 开发 Flutter 实用技巧","description":null,"categories":"Note","date":"2024-06-28T00:00:00.000Z","tags":["Flutter","IDE"],"cover":"https://r2-blog.mudong17.com/2024/09/d7e011554cba7d36902302e11dcc609c.jfif","author":{"name":"暮冬拾柒","avatar":"https://s2.loli.net/2024/06/26/hpinJ6Fb9UIZTCA.jpg"},"prev":{"text":"使用FVM管理Flutter版本","link":"/Notes/Flutter/fvm"},"next":{"text":"Dart 基础语法","link":"/Notes/Flutter/dart"}},"headers":[],"relativePath":"Notes/Flutter/ide.md","filePath":"Notes/Flutter/ide.md"}'),s={name:"Notes/Flutter/ide.md"},c=d(`<h2 id="使用-android-studio-技巧" tabindex="-1">使用 Android Studio 技巧 <a class="header-anchor" href="#使用-android-studio-技巧" aria-label="Permalink to &quot;使用 Android Studio 技巧&quot;">​</a></h2><blockquote><p>Flutter 官方文档：<a href="https://docs.flutter.cn/tools/android-studio" target="_blank" rel="noreferrer">在 Android Studio 或 IntelliJ 里开发 Flutter 应用</a></p></blockquote><h3 id="android-studio-快捷键" tabindex="-1">Android Studio 快捷键 <a class="header-anchor" href="#android-studio-快捷键" aria-label="Permalink to &quot;Android Studio 快捷键&quot;">​</a></h3><ul><li>快速创建 Widget：在 <code>Dart</code> 文件中输入 <code>stf</code> 或 <code>stl</code> 出现提示后按回车即可。</li><li>快速修复：<code>option</code> + <code>entry</code></li><li>自动生成构造函数：选中 <code>final</code> 参数，快捷键：<code>option</code> + <code>entry</code></li><li>添加父组件、变为子组件、删除子组件：<code>option</code> + <code>entry</code></li><li>万能的搜索：双击 <code>shift</code></li><li>查看最近打开的文件：<code>command</code> + <code>E</code></li><li>重命名： <code>fn</code> + <code>shift</code> + <code>F6</code></li><li>查看当前类结构：<code>command</code> + <code>fn</code> + <code>F12</code></li><li>查看源码：将光标放到要查看源码的类名或方法名上，长按 <code>command</code> ，然后点击</li><li>查看类的子类：选中要查看的类，然后：<code>command</code> + <code>B</code> 或 <code>option</code> + <code>command</code> + <code>B</code></li><li>将代码更新到模拟器上：选中模拟器，然后 <code>command</code> + <code>R</code></li><li>导入类：将光标放在要导入类的上面，然后 <code>option</code> + <code>entry</code></li><li>前进后退：追踪代码的时候，经常跳转到其他类，后退：<code>option</code> + <code>command</code> + <code>left</code> ，前进快捷键：<code>option</code> + <code>command</code> + <code>right</code></li><li>全局搜索：<code>command</code> + <code>shift</code> + <code>F</code></li><li>全局替换：<code>command</code> + <code>shift</code> + <code>R</code></li><li>查找引用：<code>option</code> + <code>shift</code> + <code>F7</code></li></ul><h2 id="使用-visual-studio-code-开发技巧" tabindex="-1">使用 Visual Studio Code 开发技巧 <a class="header-anchor" href="#使用-visual-studio-code-开发技巧" aria-label="Permalink to &quot;使用 Visual Studio Code 开发技巧&quot;">​</a></h2><h3 id="vs-code-快捷键" tabindex="-1">VS Code 快捷键 <a class="header-anchor" href="#vs-code-快捷键" aria-label="Permalink to &quot;VS Code 快捷键&quot;">​</a></h3><ul><li>快速创建 Widget：在 <code>Dart</code> 文件中输入 <code>stf</code> 或 <code>stl</code> 出现提示后按回车即可。</li><li>快速修复：<code>command</code> + <code>.</code></li><li>自动生成构造函数：选中 <code>final</code> 参数，快捷键：<code>command</code> + <code>.</code></li><li>添加父组件、变为子组件、删除子组件：<code>command</code> + <code>.</code></li><li>重新打开 关闭的编辑页面：<code>command</code> + <code>shift</code> + <code>T</code></li><li>通过匹配文本打开文件：<code>command</code> + <code>T</code></li><li>代码格式化：<code>option</code> + <code>shift</code> + <code>F</code></li><li>打开 console：<code>command</code> + <code>J</code></li><li>查看源码：将光标放到要查看源码的类名或方法名上，长按 <code>command</code> ，然后点击</li><li>查看类的子类：选中要查看的类，然后：<code>command</code> + <code>F12</code></li><li>后退：当追踪代码的时候，经常跳转到其他类，后退：<code>command</code> + <code>-</code></li><li>导入类：将光标放在要导入类的上面，然后 <code>command</code> + <code>.</code></li><li>全局搜索：<code>command</code> + <code>shift</code> + <code>F</code></li><li>把当前行代码和上一行/下一行代码交换位置：<code>option</code> + <code>up</code> 或 <code>option</code> + <code>down</code></li><li>快速复制当前行：<code>shift</code> + <code>option</code> + <code>down</code></li></ul><h3 id="运行-flutter-项目相关命令" tabindex="-1">运行 Flutter 项目相关命令 <a class="header-anchor" href="#运行-flutter-项目相关命令" aria-label="Permalink to &quot;运行 Flutter 项目相关命令&quot;">​</a></h3><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 运行当前连接设备</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">flutter</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> run</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 运行指定设备</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">flutter</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> run</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -d</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> &lt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">device_i</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">d</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 运行项目后</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">q</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> # 终止运行</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">r</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> # 热重载</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">command</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> +</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> k</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> # 清空控制台</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">flutter</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> clean</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> # 清除缓存，可用于更改代码后运行异常的一种处理方式</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">flutter</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --version</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> # 查看 Flutter 版本</span></span></code></pre></div>`,9),a=[c];function t(l,n,h,r,p,k){return o(),i("div",null,a)}const F=e(s,[["render",t]]);export{m as __pageData,F as default};
